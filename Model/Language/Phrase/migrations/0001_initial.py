# Generated by Django 3.1.12 on 2023-01-24 22:12

import SmartDjango.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', SmartDjango.models.fields.CharField(max_length=10, unique=True, verbose_name='组名')),
            ],
            options={
                'abstract': False,
                'default_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='GroupSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Phrase.group', verbose_name='关联组名')),
            ],
            options={
                'abstract': False,
                'default_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='Phrase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cy', SmartDjango.models.fields.CharField(db_index=True, max_length=20, verbose_name='词语')),
                ('py', SmartDjango.models.fields.CharField(max_length=150, verbose_name='拼音')),
                ('number_py', SmartDjango.models.fields.CharField(default=None, max_length=165, verbose_name='带数字带拼音')),
                ('clen', SmartDjango.models.fields.PositiveIntegerField(verbose_name='词语长度')),
                ('plen', SmartDjango.models.fields.PositiveIntegerField(help_text='不包含标点符号', verbose_name='净词语长度')),
            ],
            options={
                'unique_together': {('cy', 'number_py')},
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', SmartDjango.models.fields.CharField(max_length=10, unique=True, verbose_name='标签')),
                ('start', SmartDjango.models.fields.IntegerField(default=0, verbose_name='标注进展')),
            ],
            options={
                'abstract': False,
                'default_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='TagMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match', models.NullBooleanField(help_text='null未知 true匹配 false相反', verbose_name='是否匹配')),
                ('phrase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Phrase.phrase', verbose_name='关联词语')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Phrase.tag', verbose_name='关联标签')),
            ],
            options={
                'unique_together': {('phrase', 'tag')},
            },
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('linked', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='linked', to='Phrase.phrase', verbose_name='被关联词语')),
                ('linking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='linking', to='Phrase.phrase', verbose_name='关联词语')),
            ],
            options={
                'unique_together': {('linking', 'linked')},
            },
        ),
        migrations.CreateModel(
            name='GroupSetMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phrase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Phrase.phrase', verbose_name='关联词语')),
                ('set', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Phrase.groupset', verbose_name='集合')),
            ],
            options={
                'unique_together': {('set', 'phrase')},
            },
        ),
    ]
